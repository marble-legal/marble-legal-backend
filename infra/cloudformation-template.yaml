AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  STAGE:
    Type: String
    Description: The environment for the stack (dev, staging, prod)
  DBHOST:
    Type: String
    Description: Database host
  DBUSERNAME:
    Type: String
    Description: Database username
  DBPASSWORD:
    Type: String
    Description: Database password
  JWTSECRET:
    Type: String
    Description: Jwt secret
  ASSETSBUCKETNAME:
    Type: String
    Description: Assets Bucket Name
  AWSACCESSKEY:
    Type: String
    Description: AWS Access key
  AWSSECRETACCESSKEY:
    Type: String
    Description: AWS Secret key
  SERVERCOUNT:
    Type: Number
    Description: Minimum Number of Server Running
  LBCERTIFICATE:
    Type: String
    Description: ARN For Certificate to use with Load Balancer
  OPENAIAPIKEY:
    Type: String
    Description: AWS Secret key
  RAGAPIKEY:
    Type: String
    Description: RAG API Key
  CONTRACTRAGAPIKEY:
    Type: String
    Description: CONTRACT RAG API Key
  STRIPESECRETKEY:
    Type: String
    Description: The secret key for stripe
  STRIPEINDIVIDUALMONTHLYPRICEID:
    Type: String
    Description: Monthly Price ID for Individual Plan
  STRIPESMALLBUSINESSMONTHLYPRICEID:
    Type: String
    Description: Monthly Price ID for Small Business Plan
  STRIPESOLOPRACTIONERMONTHLYPRICEID:
    Type: String
    Description: Monthly Price ID for Solo Practioner Plan
  STRIPEINDIVIDUALYEARLYPRICEID:
    Type: String
    Description: Yearly Price ID for Individual Plan
  STRIPESMALLBUSINESSYEARLYPRICEID:  
    Type: String
    Description: Yearly Price ID for Small Business Plan
  STRIPESOLOPRACTIONERYEARLYPRICEID:
    Type: String
    Description: Yearly Price ID for Solo Practioner Plan
  STRIPEAIASSISTANTPRICEID:
    Type: String
    Description: Price ID for AI ASSISTANT
  STRIPECONTRACTGENERATIONPRICEID:
    Type: String
    Description: Price ID for Contract generation
  STRIPECONTRACTANALYSISPRICEID:
    Type: String
    Description: Price ID for Contract Analysis
  STRIPEBUSINESSENTITYPRICEID:
    Type: String
    Description: Price ID for Business Entity
  STRIPEATTORNEYREVIEWPRICEID:
    Type: String
    Description: Price ID for Attorney Review
  

Resources:
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub marble-ecr-${STAGE}

  ECSCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: !Sub marble-ecs-cluster-${STAGE}

  ECSLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /ecs/marble-api-${STAGE}

  ECSTaskExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub ecs-execution-role-${STAGE}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"

  APITaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub marble-task-definition-${STAGE}
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      Cpu: 1024
      Memory: 3072
      RuntimePlatform:
        CpuArchitecture: X86_64
        OperatingSystemFamily: LINUX
      ContainerDefinitions:
        - Name: !Sub marble-ecs-container-${STAGE}
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/marble-ecr-${STAGE}:latest
          Cpu: 0
          Essential: true
          PortMappings:
            - ContainerPort: 3004
              Protocol: tcp
              AppProtocol: http
              Name: !Sub marble-task-definition-tcp-3004-${STAGE}
          Environment:
            - Name: DB_NAME
              Value: marble
            - Name: DB_PORT
              Value: 5432
            - Name: DB_HOST
              Value: !Ref DBHOST
            - Name: DB_USERNAME
              Value: !Ref DBUSERNAME
            - Name: DB_PASSWORD
              Value: !Ref DBPASSWORD
            - Name: JWT_SECRET
              Value: !Ref JWTSECRET
            - Name: ASSETS_BUCKET_NAME
              Value: !Ref ASSETSBUCKETNAME
            - Name: AWS_ACCESS_KEY
              Value: !Ref AWSACCESSKEY
            - Name: AWS_SECRET_ACCESS_KEY
              Value: !Ref AWSSECRETACCESSKEY
            - Name: EMAIL_SENDER_ID
              Value: contact@marblels.com
            - Name: AWS_REGION
              Value: us-east-1
            - Name: OPENAI_API_KEY
              Value: !Ref OPENAIAPIKEY
            - Name: RAG_API_KEY
              Value: !Ref RAGAPIKEY
            - Name: CONTRACT_RAG_API_KEY
              Value: !Ref CONTRACTRAGAPIKEY
            - Name: STRIPE_SECRET_KEY
              Value: !Ref STRIPESECRETKEY
            - Name: STRIPE_INDIVIDUAL_MONTHLY_PRICE_ID
              Value: !Ref STRIPEINDIVIDUALMONTHLYPRICEID
            - Name: STRIPE_SMALL_BUSINESS_MONTHLY_PRICE_ID
              Value: !Ref STRIPESMALLBUSINESSMONTHLYPRICEID
            - Name: STRIPE_SOLO_PRACTIONER_MONTHLY_PRICE_ID
              Value: !Ref STRIPESOLOPRACTIONERMONTHLYPRICEID
            - Name: STRIPE_INDIVIDUAL_YEARLY_PRICE_ID
              Value: !Ref STRIPEINDIVIDUALYEARLYPRICEID
            - Name: STRIPE_SMALL_BUSINESS_YEARLY_PRICE_ID
              Value: !Ref STRIPESMALLBUSINESSYEARLYPRICEID
            - Name: STRIPE_SOLO_PRACTIONER_YEARLY_PRICE_ID
              Value: !Ref STRIPESOLOPRACTIONERYEARLYPRICEID
            - Name: STRIPE_AI_ASSISTANT_PRICE_ID
              Value: !Ref STRIPEAIASSISTANTPRICEID
            - Name: STRIPE_CONTRACT_GENERATION_PRICE_ID
              Value: !Ref STRIPECONTRACTGENERATIONPRICEID
            - Name: STRIPE_CONTRACT_ANALYSIS_PRICE_ID
              Value: !Ref STRIPECONTRACTANALYSISPRICEID
            - Name: STRIPE_BUSINESS_ENTITY_PRICE_ID
              Value: !Ref STRIPEBUSINESSENTITYPRICEID
            - Name: STRIPE_ATTORNEY_REVIEW_PRICE_ID
              Value: !Ref STRIPEATTORNEYREVIEWPRICEID
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: true
              awslogs-group: !Sub /ecs/marble-api-${STAGE}
              awslogs-region: !Sub ${AWS::Region}
              awslogs-stream-prefix: ecs
              awslogs-datetime-format: "%Y-%m-%d %H:%M:%S%L"

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub marble-load-balancer-${STAGE}
      Subnets:
        - subnet-0267fd77d34334471
        - subnet-04e111ba12d27bfcd
        - subnet-08943f65b730fd0a0
        - subnet-03eb57b36a093c974
        - subnet-0de15e1a367613521
        - subnet-0fe0d75d1f9673051
      SecurityGroups:
        - sg-0aebf96e805f15b59
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: "600"

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub marble-target-group-${STAGE}
      Port: 3004
      Protocol: HTTP
      TargetType: ip
      VpcId: vpc-0289e05ea16e95a6b
      HealthCheckEnabled: true
      HealthCheckPath: /health

  HTTPSLBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn: LoadBalancer
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Certificates:
        - CertificateArn: !Ref LBCERTIFICATE
      Port: 443
      Protocol: HTTPS
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  HTTPLBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn: LoadBalancer
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: "HTTPS"
            Port: 443
            Host: "#{host}"
            Path: "/#{path}"
            Query: "#{query}"
            StatusCode: "HTTP_301"

  ECSService:
    Type: AWS::ECS::Service
    DependsOn: 
      - APITaskDefinition
      - LoadBalancer
    Properties:
      ServiceName: !Sub marble-ecs-api-service-${STAGE}
      Cluster: !Ref ECSCluster
      LaunchType: FARGATE
      TaskDefinition: !Ref APITaskDefinition
      DesiredCount: !Ref SERVERCOUNT
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - subnet-0267fd77d34334471
            - subnet-04e111ba12d27bfcd
            - subnet-08943f65b730fd0a0
            - subnet-03eb57b36a093c974
            - subnet-0de15e1a367613521
            - subnet-0fe0d75d1f9673051
          SecurityGroups:
            - sg-0aebf96e805f15b59
      LoadBalancers:
        - TargetGroupArn: !Ref TargetGroup
          ContainerName: !Sub marble-ecs-container-${STAGE}
          ContainerPort: 3004
